USERS
=====
User: UID, Public, Private
Friend 1: UID, Public, Private
Friend 2: UID, Public, Private


CONTRACTS
=========
ID: UID (Proxy Address), Public (User), Recovery Address, RecoveryIPFS Hash
Recovery: Recovery Address, Public (Friend 1), Public (Friend 2)


STORAGE
=======
IPFS: Attribute Block (User 1), Image (User 1), Attribute Block (User 2), Image (User 2)


STEPS
=====

SIGNUP
1. A public private key pair with recovery mnemonic seed is created for the user.
2. User selects the public keys of recovery users.
2. A separate recovery public private key pair is also created.
  a) The recovery mnemonic is encrypted with the recovery public key.
  b) The recovery private key is split into blocks using "threshold crypto".
  c) Each recovery block is encrypted with the public key of a recovery user.
4. Recovery contract is created with selected recovery users public keys and associated recovery blocks.
5. ID contract is created with its address as UUID, users public key and address of recovery user.

ADD ATTRIBUTE
1. User selects attribute to add to profile.
2. User downloads existing attribute blob from IPFS.
3. User encrypts the new attribute with their public key and creates a signature.
4. User adds the new attribute and signature to the attribute blob and pushes to IPFS.
5. User sends a transaction to the ID contract to update the IPFS hash.

DISCLOSE ATTRIBUTE
1. ID contract is called to get the IPFS hash and the attribute blob is pulled from IPFS.
2. User decrypts the desired attribute from the attribute blob using their private key.
3. User reencrypts the attribute and IPFS hash with the public key of the destination and sends it.
4. The destination decrypts the message, accesses the IPFS hash and verifies the attribute using the signature.

RECOVER LOST KEY
1. User creates a new blank "recovery account".
2. User finds their UUID on the network and retrieves recovery users and encrypted mnemonic.
3. User contacts all selected recovery users and asks for decrypted private recovery key blobs.
4. A recovery user sees the request and decides to decrypt their recovery blob for that user.
5. The recovery blob is then reencrypted with the public key of the user and sent to them.
6. Once the user receives M of N recovery blobs, they decrypt the mnemonic and recover their account.

RECOVER LEAKED/STOLEN KEY
1. Same steps as above, but the user then decrypts existing attribute data and transfers it to an account with new keys.
